I - Правила підтримки і роботи в проекті SourceControl

1. Протягом дня необхідно робити коміти і пуш в Space branch, якщо протягом дня не робляться коміти, то наприкінці робочого дня обов'язково має бути коміт і пуш. У випадку їх відсутності з команди знімається -1 бал за кожен провтик кожного співробітника протягом спрінта;
2. Обов'язково виконати Cleanup, та Pull актуальної гілки dev, перед пушем;
3. Коментар коміта, має мати зрозумілу назву (якщо bug fix, то фікс якого бага), без скорочень, з великої літери, з відступами у вигляді пробілу "Implemented new logic for character". Допускається назва коміта CleanUp якщо там лише косметичні правки;
4. В поточному м/р мають бути відсутні ворнінги як в проекті Unity взагалом, так і в Rider; (Стосовно Rider, буде виконана робота над ворнінгами, після чого це правило буде в силі);
5. Назва нової гілки має мати запис у вигляді feature/ або bugFix/ перед назвою гілки. Контекст має бути прописан за допомогою Upper_Camel_Case з нижнім підкресленням між кожним словом. Остаточний варіант виглядатиме так: - feature/Character_Movement_Implementation, bugFix/Character_Movement_Fix;
6. В м/р мають бути відсутніми файли які змінюються, без внесення в них змін виконавцем;
7. При Мерджі в дев, виконується Squash, Назва гілки використовується в якості назви коміта, в стилі CamelCase але з пробілами "Some Useful Logic Changes"
8. Видаляти файли які не використовуються, якщо додаються файли які в подальшому мають бути видалені, робити відповідне позначення;
9. Приділяти увагу актуальності власних гілок, якщо вона потрібна, але покищо відкладена, то оновлювати її з девом, якщо в ній немає потреби видаляти в Space;
10. Перед відправкою м/р на перевірку, переконатись, що відсутні:
логи;
#region;
    /// <summary>
    ///   Дуже зрозуміле пояснення метода
    /// </summary>
Використання summary допускається лише у модулях, та/або плагінах, но не в звичайному коді;
коментарі (допускається використання //TODO, але у випадку з'явлення такого має бути заведена задача з приводу такого //TODO);
закоментований код;
11. Приділяти ретельну увагу назві змінних, полей, класів, властивостей, методів, папок, префабів, об'єктів, тощо...;
12. Перед остаточним підтвердженням м/р і злиттям гілки з дев, необхідно виконати Squash комітів, в якості назви використовувати назву гілки, без приставки feature/, замість _ робити відступи і з кожним словом з великої літери, наприклад:
було:
feature/Building_repairment_implementation
має бути:
Building Repairment Implementation

II - Загальні правила і рекомендації по роботі в проекті Unity

1. Іменувати об'єкти/префаби/папки належним чином:
- належне найменування об'єктів, щоб ім'я відповідало призначенню;
- CamelCase в найменуванні;
- відсутність кирилиці;
- відсутні відступи;
- відсутність дужки;
- відсутність будь які інші символи, окрім спеціальних правил.
2. Використовувати іменовані пусті об'єкти в якості папок на сцені;
3. Завжди встановлювати таким об'єктам Transforn (0,0,0), а також об'єктам, які не потребують спеціальної позиції;
4. Використовувати скрізь scale - 1, де це можливо, для подальшого спрощення роботи з розміром;
5. При роботі з 3д об'єктами зробити напрямок усіх мешів в одному напрямку по z + або -;
6. Максимально використовувати префаби при роботі на сцені, іншими словами, не префабами, мають бути хіба що об'єкти - папки, для чого:
- дозволяє запобігати непотрібним змінам сцени, які обов'язково ускладнять м/р;
- спрощує роботу з самим префабами, тому що вони будуть складатись із декількох, що так само позитивно впливатиме на внесення в них змін;
7. Якщо є об'єкт в якому можно змінювати властивості, наприклад : 
- чорний гоблін з пікою та зелений гоблін з пікою
найкращим рішенням буде зробити 2 різних префаба, а не просто додати на сцену такий самий префаб і потім змінити властивість кольору з чорного на зелений;
це стосується навіть звичайної зміни у цифрах, наприклад, гоблін з 60 хп і гоблін з 120 хп;
такий підхід дозволить уникнути зайвої роботи/змін в сцені;
8. Намагатись максимально зменшити необхідність лінкувати префаби на сцені, краще грузити їх із ресурсів;
9. Краще використовувати лінки на префаби, аніж робити багатовкладені префаби;
10. Організовувати інспектор за допомогою серилізованих класів, а не звичайних значень, наприклад:
замість:
- float _hitPower;
- float _attackSpeed;
- int _attackDamage;
використати:
- Weapon _weapon;

[Serializable]
public class Weapon {
  public float HitPower;
  public float AttackSpeed;
  public int AttackDamage;
}

III - Правила організації папок і файлів проекту

1. Надавати файлам відповідне найменування, якщо це Ball, то таку назву і надавати;
2. Назва має бути читаємою і вимовляємою BlSmth - точно не підійде;
3. Користуватись CamelCase при найменуванні, без відступів/підкреслень/тире тощо, допускається використання символу @ перед назвою анімації Ragnar@Run;
4. Назва повинна бути іменуванням, а не відображенням якогось прогресу, наприклад BallFinal;
5. Назва має бути повною не скороченою: DarkVampire@Walk замість DVamp@W;
6. Якщо існує додаткова документація в проекті, наприклад для дизайнера, то найменування файлів проекту мають відповідати назвам у документації: назва PlayerDie != PlayerDeath;
7. Описове найменування має бути ліворуч, тобто перед основною назвою, для спрощення пошуку в проекті: PauseButton, замість ButtonPause; GreenGoblin, засість GoblinGreen;
8. Якщо є потреба у черговому найменуванні, то починати його необхідно з 0, наприклад WorkerPath0, WorkerPath1;
9. Там де не утворюється черговість, не треба використовувати додавання нумерації: Bird0, Bird1, Bird2 має бути Flamingo, Eagle, Swallow;
10. Якщо файл/папка тимчасові, то їм надається подвійне підкреслення на початку __Project_Backup;
11. Іменування декількох аспектів одного об'єкта:
Використовувати підкреслення між назвою і речю яка описує цей аспект:

GUI - стан кнопки EnterButton_Active, EnterButton_Inactive
Textures - DarkVampire_Diffuse, DarkVampire_Normalmap
Skybox - JungleSky_Top, JungleSky_North
LOD Groups - DarkVampire_LOD0, DarkVampire_LOD1
Ця конвенція не підійде при іменуванні різниці між об'єктами, наприклад Rock_Small, Rock_Large має бути SmallRock, LargeRock.

Структура папок:

Art
	Animations
		AnimationClips
		Animators
		...
	Materials
		Characters
		Creatures
		...
	Models
		Characters
		Creatures
		...
	Textures
		Characters
		Creatures
		...
	...
Audio
Plugins
Resources
Scenes
Scripts
...